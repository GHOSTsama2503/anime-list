---
import NextIcon from "../icons/NextIcon.astro";
import PrevIcon from "../icons/PrevIcon.astro";
import LimitSelector from "../paginator/LimitSelector.astro";
---

<div class="paginator">
	<label class="descriptions-checkbox">
		Search in Descriptions
		<input type="checkbox" />
	</label>

	<div class="buttons-container">
		<button class="btn" id="prev">
			<PrevIcon />
		</button>

		<button class="btn clickable" id="next">
			<NextIcon />
		</button>
	</div>

	<LimitSelector class:list={"limit-label"} />
</div>

<script>
	type PageParams = {
		limit: number;
		offset: number;
	};

	function getPageParams(): PageParams {
		const params = new URLSearchParams(window.location.search);

		const limitSelect: HTMLSelectElement | null =
			document.querySelector("#limit");
		if (limitSelect == null) {
			throw new Error("limit selector is missing");
		}

		const limit = params.get("limit") || limitSelect.value;
		const offset = params.get("offset") || "0";

		const parsedLimit = parseInt(limit);
		const parsedOffset = parseInt(offset);

		if (isNaN(parsedLimit) || isNaN(parsedOffset)) {
			throw new Error("invalid limit or offset");
		}

		return { limit: parsedLimit, offset: parsedOffset };
	}

	function goTo(params: PageParams) {
		const urlParams = new URLSearchParams(window.location.search);

		urlParams.set("limit", params.limit.toString());
		urlParams.set("offset", params.offset.toString());

		window.location.href = `/?${urlParams.toString()}`;
	}

	function prev() {
		const params = getPageParams();

		params.offset -= params.limit;
		if (params.offset < 0) {
			params.offset = 0;
		}

		goTo(params);
	}

	function next() {
		const params = getPageParams();
		params.offset += params.limit;

		goTo(params);
	}

	const prevBtn = document.querySelector("#prev");
	if (prevBtn == null) {
		throw new Error("prev button is missing");
	}

	const params = getPageParams();
	if (params.offset > 0) {
		prevBtn.addEventListener("click", prev);
		prevBtn.classList.add("clickable");
	} else {
		prevBtn.classList.add("btn-disabled");
	}

	const nextBtn = document.querySelector("#next");
	if (nextBtn == null) {
		throw new Error("prev button is missing");
	}

	nextBtn.addEventListener("click", next);
</script>

<style>
	.paginator {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		grid-template-rows: repeat(2, 1fr);
		gap: 0.5rem;
		background-color: var(--bg-primary);
		padding: 0.5rem;
		border-radius: var(--border-radius);
	}

	.descriptions-checkbox {
		grid-column-start: 1;
		grid-column-end: 4;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.buttons-container {
		grid-column-start: 1;
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 0.5rem;
	}

	.limit-label {
		grid-column-start: 2;
		grid-column-end: 4;
		display: flex;
		justify-content: flex-end;
	}

	.btn {
		width: 2rem;
		font-size: xx-large;
		display: flex;
		align-items: center;
	}

	.btn-disabled {
		cursor: not-allowed;
		opacity: 40%;
	}

	@media (min-width: 640px) {
		.paginator {
			grid-template-columns: repeat(3, 1fr);
			grid-template-rows: 1fr;
		}

		.descriptions-checkbox {
			grid-column-end: 2;
			justify-content: flex-start;
		}

		.buttons-container {
			grid-column-start: 2;
		}

		.limit-label {
			grid-column-start: 3;
		}
	}
</style>
